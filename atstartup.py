import os
import winreg
import tkinter as tk
from tkinter import filedialog, messagebox
from PIL import Image, ImageTk
import base64
import io

# Image encodée en base64 (remplace ceci par ton image encodée)
image_base64 = """"""

def add_to_startup():
    path = entry.get()
    if not os.path.exists(path):
        messagebox.showerror("Error", "This File Does Not Exist.")
        return
    
    name = os.path.basename(path)
    key = winreg.HKEY_CURRENT_USER
    registry = r"Software\Microsoft\Windows\CurrentVersion\Run"
    
    try:
        with winreg.OpenKey(key, registry, 0, winreg.KEY_SET_VALUE) as regkey:
            winreg.SetValueEx(regkey, name, 0, winreg.REG_SZ, path)
        messagebox.showinfo("Succès", f"{name} a été ajouté au démarrage.")
    except Exception as e:
        messagebox.showerror("Error", f"Cant add this app : {e}")

def remove_from_startup():
    path = entry.get()
    name = os.path.basename(path)
    key = winreg.HKEY_CURRENT_USER
    registry = r"Software\Microsoft\Windows\CurrentVersion\Run"
    
    try:
        with winreg.OpenKey(key, registry, 0, winreg.KEY_SET_VALUE) as regkey:
            winreg.DeleteValue(regkey, name)
        messagebox.showinfo("Success", f"{name} is not a startup app anymore.")
    except FileNotFoundError:
        messagebox.showwarning("Warning", "This app is not a startup app")
    except Exception as e:
        messagebox.showerror("Error", f"Cant delete startup app : {e}")

def browse_file():
    file_path = filedialog.askopenfilename(filetypes=[("Executables File", "*.exe")])
    if file_path:
        entry.delete(0, tk.END)
        entry.insert(0, file_path)

# Interface Tkinter
root = tk.Tk()
root.title("At Startup V1")
root.geometry("400x200")

# Chargement de l'image de fond
image_data = base64.b64decode(image_base64)
image = Image.open(io.BytesIO(image_data))
photo = ImageTk.PhotoImage(image)
background_label = tk.Label(root, image=photo)
background_label.place(relwidth=1, relheight=1)

frame = tk.Frame(root, bg='white')
frame.pack(pady=20)

entry = tk.Entry(frame, width=40)
entry.pack(side=tk.LEFT, padx=5)

browse_btn = tk.Button(frame, text="Browse", command=browse_file)
browse_btn.pack(side=tk.RIGHT)

add_btn = tk.Button(root, text="Add to startup", command=add_to_startup)
add_btn.pack(pady=5)

remove_btn = tk.Button(root, text="Delete from startup", command=remove_from_startup)
remove_btn.pack(pady=5)

root.mainloop()
